version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=151676761426.dkr.ecr.ap-northeast-1.amazonaws.com/flask_docker
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t flask_docker:latest .
      - docker tag flask_docker:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker tag flask_docker:latest $REPOSITORY_URI:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"flask-docker-fargate","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files:
      - imagedefinitions.json
      - appspec.yml
      - taskdef.json
  secondary-artifacts:
    BuildArtifact:
      files:
        - imagedefinitions.json
    DefinitionArtifact:
      files:
        - appspec.yml
        - taskdef.json